---

export const prerender = true;

import fetchData from "../../lib/fetchData";
import type FetchData from "../../interfaces/FetchData";
import type BlogItem from "../../interfaces/BlogItem";
import type CategoryItem from "../../interfaces/CategoryItem";
import Layout from "../../layouts/Layout.astro";
import PostHeader from "../../components/sections/blog/PostHeader.tsx";
import PostContent from "../../components/sections/blog/PostContent.tsx";
import Cta02 from "../../components/sections/blog/Cta02.tsx";
import Recommended from "../../components/sections/blog/Recommended.tsx";

export async function getStaticPaths() {
  const queryIds = `
		query Query {
			blogModel {
				_id
			}
		}
	`;

  const { blogModel }: FetchData = await fetchData(queryIds);

	if (blogModel && blogModel.length === 0) {
		return [];
	}

  return blogModel && blogModel.map((blog) => {
    return {
      params: {
        id: blog._id,
      },
    };
  });
}

const queryPost = `
	query Query($id: String) {
		blogModel(_id: $id) {
			_created
			title
			text
			category
			tags
			image
			contributors {
				name
				title
				photo
			}
		}
		catsModel {
			_id
			title
			url
		}
	}
`;

const variables = {
  id: Astro.params.id,
};

const { blogModel: posts, catsModel: cats }: FetchData = await fetchData(queryPost, variables);

if (!posts || !cats) {
  console.error("Error fetching data");
  return;
}

---

<Layout title={`${posts[0].title} - Human Design`} description="">
	<PostHeader post={posts[0] as BlogItem} cats={cats as CategoryItem[]} />
	<PostContent post={posts[0] as BlogItem} />
	<Cta02 />
	<Recommended />
</Layout>